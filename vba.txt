Option Explicit

'========================
' Excel全シート → 1本のWordへ出力
' 設定：
'   PASTE_MODE = "RTF"      … 表として貼り付け（書式をできるだけ保持、編集しやすい）
'   PASTE_MODE = "PICTURE"  … 画像として貼り付け（見た目そのまま、編集不可）
'   PASTE_MODE = "OLE"      … Excelオブジェクトとして埋め込み（ダブルクリックで編集）
'========================
Public Sub ExportAllSheetsToWord()
    Const PASTE_MODE As String = "RTF" ' "RTF" / "PICTURE" / "OLE"

    ' Word定数（Late Binding用）
    Const wdCollapseEnd As Long = 0
    Const wdPasteRTF As Long = 1
    Const wdPasteText As Long = 2
    Const wdPasteMetafilePicture As Long = 3
    Const wdPasteOLEObject As Long = 0
    Const wdPasteEnhancedMetafile As Long = 9

    Dim wdApp As Object        ' Word.Application
    Dim wdDoc As Object        ' Word.Document
    Dim outPath As String
    Dim ws As Worksheet
    Dim ur As Range
    Dim wr As Object           ' Word.Range
    Dim nowStr As String
    Dim pasted As Boolean
    Dim shapesText As String

    If ThisWorkbook.Path = "" Then
        MsgBox "先にこのブックを保存してください。", vbExclamation
        Exit Sub
    End If

    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual

    nowStr = Format(Now, "yyyymmdd_HHMM")
    outPath = ThisWorkbook.Path & "\Export_" & nowStr & ".docx"

    ' Word起動（Late Binding：参照設定いらない）
    On Error Resume Next
    Set wdApp = CreateObject("Word.Application")
    On Error GoTo 0
    If wdApp Is Nothing Then
        CleanUp
        MsgBox "Wordを起動できませんでした。Wordがインストールされているか確認してください。", vbCritical
        Exit Sub
    End If

    wdApp.Visible = True
    Set wdDoc = wdApp.Documents.Add

    ' 表紙っぽくタイトル
    Set wr = wdDoc.Content
    wr.Collapse wdCollapseEnd
    wr.InsertAfter "Excelシート出力" & vbCrLf
    wr.InsertAfter ThisWorkbook.Name & vbCrLf
    wr.InsertAfter Format(Now, "yyyy/mm/dd HH:MM") & vbCrLf & vbCrLf

    ' 全シート
    For Each ws In ThisWorkbook.Worksheets
        If ws.Visible = xlSheetVisible Then
            Set ur = GetSafeUsedRange(ws)
            If Not ur Is Nothing Then
                ' 見出し（太字）
                Set wr = wdDoc.Content
                wr.Collapse wdCollapseEnd
                wr.InsertAfter "【" & ws.Name & "】" & vbCrLf
                wr.SetRange Start:=wr.End - Len("【" & ws.Name & "】" & vbCrLf), _
                            End:=wr.End
                wr.Bold = True

                ' データ貼り付け
                pasted = PasteRangeToWord ur, wdDoc, PASTE_MODE, _
                           wdPasteRTF, wdPasteEnhancedMetafile, wdPasteOLEObject

                ' 図・図形のテキスト（補足）
                shapesText = GetShapesText(ws)
                If Len(shapesText) > 0 Then
                    Set wr = wdDoc.Content
                    wr.Collapse wdCollapseEnd
                    wr.InsertAfter vbCrLf & "＜図・図形テキスト＞" & vbCrLf & shapesText & vbCrLf
                End If

                ' 区切り
                Set wr = wdDoc.Content
                wr.Collapse wdCollapseEnd
                wr.InsertAfter vbCrLf
            End If
        End If
    Next ws

    ' 保存
    On Error Resume Next
    wdDoc.SaveAs2 outPath
    On Error GoTo 0

    MsgBox "Wordへ出力しました：" & outPath, vbInformation

CleanUp:
    Application.Calculation = xlCalculationAutomatic
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
End Sub

'========================
' 範囲をWordへ貼り付け
'========================
Private Function PasteRangeToWord(ByVal rng As Range, _
                                  ByVal wdDoc As Object, _
                                  ByVal mode As String, _
                                  ByVal wdPasteRTF As Long, _
                                  ByVal wdPasteEMF As Long, _
                                  ByVal wdPasteOLE As Long) As Boolean
    Const wdCollapseEnd As Long = 0
    Dim wr As Object ' Word.Range

    On Error GoTo ErrHandler

    rng.Copy

    Set wr = wdDoc.Content
    wr.Collapse wdCollapseEnd

    Select Case UCase$(mode)
        Case "RTF"
            ' 表の見た目をできるだけ保持しつつ編集も可
            wr.PasteSpecial DataType:=wdPasteRTF

        Case "PICTURE"
            ' 見た目完全優先（編集不可）
            wr.PasteSpecial DataType:=wdPasteEMF  ' 拡張メタファイル

        Case "OLE"
            ' Excelオブジェクト埋め込み（ダブルクリックで編集可）
            wr.PasteSpecial DataType:=wdPasteOLE

        Case Else
            ' デフォルトはRTF
            wr.PasteSpecial DataType:=wdPasteRTF
    End Select

    PasteRangeToWord = True
    Exit Function

ErrHandler:
    PasteRangeToWord = False
End Function

'========================
' UsedRangeを安全に取得
'========================
Private Function GetSafeUsedRange(ByVal ws As Worksheet) As Range
    Dim ur As Range
    On Error Resume Next
    Set ur = ws.UsedRange
    On Error GoTo 0

    If ur Is Nothing Then
        Set GetSafeUsedRange = Nothing
        Exit Function
    End If

    If Application.WorksheetFunction.CountA(ur) = 0 Then
        Set GetSafeUsedRange = Nothing
    Else
        Set GetSafeUsedRange = ur
    End If
End Function

'========================
' 図・図形のテキストを回収
'========================
Private Function GetShapesText(ByVal ws As Worksheet) As String
    Dim shp As Shape
    Dim t As String
    Dim buf As String

    For Each shp In ws.Shapes
        t = ""

        On Error Resume Next
        If shp.TextFrame2.HasText Then
            t = shp.TextFrame2.TextRange.Text
        ElseIf shp.TextFrame.Characters.Count > 0 Then
            t = shp.TextFrame.Characters.Text
        End If
        On Error GoTo 0

        If Len(Trim$(t)) = 0 Then
            t = shp.AlternativeText
        End If

        If Len(Trim$(t)) > 0 Then
            buf = buf & "・" & t & vbCrLf
        End If
    Next shp

    GetShapesText = buf
End Function

'========================
' 範囲をWordへ貼り付け
'========================
Private Function PasteRangeToWord(ByVal rng As Range, _
                                  ByVal wdDoc As Object, _
                                  ByVal mode As String, _
                                  ByVal wdPasteRTF As Long, _
                                  ByVal wdPasteEMF As Long, _
                                  ByVal wdPasteOLE As Long) As Boolean
    Const wdCollapseEnd As Long = 0
    Dim wr As Object ' Word.Range

    On Error GoTo ErrHandler

    rng.Copy

    Set wr = wdDoc.Content
    wr.Collapse wdCollapseEnd

    Select Case UCase$(mode)
        Case "RTF"
            ' 表の見た目をできるだけ保持しつつ編集も可
            wr.PasteSpecial DataType:=wdPasteRTF

        Case "PICTURE"
            ' 見た目完全優先（編集不可）
            wr.PasteSpecial DataType:=wdPasteEMF  ' 拡張メタファイル

        Case "OLE"
            ' Excelオブジェクト埋め込み（ダブルクリックで編集可）
            wr.PasteSpecial DataType:=wdPasteOLE

        Case Else
            wr.PasteSpecial DataType:=wdPasteRTF
    End Select

    PasteRangeToWord = True
    Exit Function

ErrHandler:
    PasteRangeToWord = False
End Function


